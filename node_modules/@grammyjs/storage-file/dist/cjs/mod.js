"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileAdapter = void 0;
const deps_node_js_1 = require("./deps.node.js");
class FileAdapter {
    /**
     * @constructor
     * @param {opts} options options
     * @param {opts.dirName} options.dirName - name of directory where files should be stored. Defaults to `sessions`.
     * @param {opts.serializer} options.serializer
     * serializer of file. Default `JSON.stringify(input, null, '\t')`.
     *
     * @param {opts.deserializer} options.deserializer
     * deserializer of file. Default `JSON.parse(input)`.
     */
    constructor(opts = {}) {
        var _a, _b, _c;
        this.folderPath = deps_node_js_1.path.resolve((0, deps_node_js_1.cwd)(), (_a = opts === null || opts === void 0 ? void 0 : opts.dirName) !== null && _a !== void 0 ? _a : 'sessions');
        this.serializer = (_b = opts.serializer) !== null && _b !== void 0 ? _b : ((input) => JSON.stringify(input, null, '\t'));
        this.deserializer = (_c = opts.deserializer) !== null && _c !== void 0 ? _c : ((input) => JSON.parse(input));
        deps_node_js_1.fs.ensureDirSync(this.folderPath);
    }
    resolveSessionPath(key) {
        const subFolder = key.substr(-2);
        return deps_node_js_1.path.resolve(this.folderPath, subFolder, `${key}.json`);
    }
    async findSessionFile(key) {
        try {
            return await deps_node_js_1.fs.readFile(this.resolveSessionPath(key));
        }
        catch {
            return null;
        }
    }
    async read(key) {
        const file = await this.findSessionFile(key);
        if (!file) {
            return undefined;
        }
        return this.deserializer(file);
    }
    async write(key, value) {
        const fullPath = this.resolveSessionPath(key);
        const fileName = `${key}.json`;
        const folderPath = fullPath.substring(0, fullPath.length - fileName.length);
        await deps_node_js_1.fs.ensureDir(folderPath);
        await deps_node_js_1.fs.writeFile(fullPath, this.serializer(value));
    }
    async delete(key) {
        await deps_node_js_1.fs.remove(this.resolveSessionPath(key));
    }
}
exports.FileAdapter = FileAdapter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpREFBK0Q7QUFXL0QsTUFBYSxXQUFXO0lBS3RCOzs7Ozs7Ozs7T0FTRztJQUNILFlBQVksT0FBOEIsRUFBRTs7UUFDMUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxtQkFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFBLGtCQUFHLEdBQUUsRUFBRSxNQUFBLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxPQUFPLG1DQUFJLFVBQVUsQ0FBQyxDQUFDO1FBRW5FLElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBQSxJQUFJLENBQUMsVUFBVSxtQ0FDL0IsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFBLElBQUksQ0FBQyxZQUFZLG1DQUNuQyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFFakMsaUJBQUUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFTyxrQkFBa0IsQ0FBQyxHQUFXO1FBQ3BDLE1BQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQyxPQUFPLG1CQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLEdBQUcsR0FBRyxPQUFPLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBRU8sS0FBSyxDQUFDLGVBQWUsQ0FBQyxHQUFXO1FBQ3ZDLElBQUksQ0FBQztZQUNILE9BQU8sTUFBTSxpQkFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN6RCxDQUFDO1FBQUMsTUFBTSxDQUFDO1lBQ1AsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDO0lBQ0gsQ0FBQztJQUVELEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBVztRQUNwQixNQUFNLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ1YsT0FBTyxTQUFTLENBQUM7UUFDbkIsQ0FBQztRQUVELE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFXLEVBQUUsS0FBUTtRQUMvQixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUMsTUFBTSxRQUFRLEdBQUcsR0FBRyxHQUFHLE9BQU8sQ0FBQztRQUMvQixNQUFNLFVBQVUsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUU1RSxNQUFNLGlCQUFFLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQy9CLE1BQU0saUJBQUUsQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFXO1FBQ3RCLE1BQU0saUJBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDaEQsQ0FBQztDQUNGO0FBN0RELGtDQTZEQyJ9